
#log4j.rootLogger = level, console, files...
#将等级为debug及以上的log输出到 .Console, .TFile, .DFile, .EFile .DailyRollingFile, .RollingFile指定的位置
log4j.rootLogger=DEBUG, Console, TFile, DFile, EFile, DailyRollingFile, RollingFile

#仅针对控制台    

#Console  
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
#.PatternLayout是指用自定义的格式
log4j.appender.Console.layout=org.apache.log4j.PatternLayout 
# -5表示固定占5个字符，不够则用空格补齐，方便对齐 
# %m 输出代码中指定的消息；
# %M 输出打印该条日志的方法名；
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
# %r 输出自应用启动到输出该log信息耗费的毫秒数；
# %c 输出所属的类目，通常就是所在类的全名；
# %t 输出产生该日志事件的线程名；
# %n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
# %l 输出日志事件的发生位置，及在代码中的行数；
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %M %m%n


#以下全部针对文件

#DebugFile
log4j.appender.TFile = org.apache.log4j.FileAppender
#保存在本项目路径下
log4j.appender.TFile.File = log1.log
#使用TTCCLayout格式
log4j.appender.TFile.layout = org.apache.log4j.TTCCLayout
#log4j.appender.DFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n
#当有debug级别及以上的日志发生时，才输出
log4j.appender.TFile.Threshold = TRACE
#true为追加到原文件中，false为覆盖原文件
log4j.appender.TFile.Append = true

#DebugFile
log4j.appender.DFile = org.apache.log4j.FileAppender
#保存在指定路径下
log4j.appender.DFile.File = C://Log4j/log2.log
#使用HTML格式
log4j.appender.DFile.layout = org.apache.log4j.HTMLLayout
#log4j.appender.DFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n
#当有debug级别及以上的日志发生时，才输出
log4j.appender.DFile.Threshold = DEBUG
#true为追加到原文件中，false为覆盖原文件
log4j.appender.DFile.Append = false


#ErrorFile
log4j.appender.EFile = org.apache.log4j.FileAppender
log4j.appender.EFile.File = C://Log4j/error.log
log4j.appender.EFile.layout = org.apache.log4j.PatternLayout
log4j.appender.EFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n
#当有error级别及以上的日志发生时，才输出
log4j.appender.EFile.Threshold = Error


#DailyRollingFile
#每天00：00按时输出一个前一天的 “log3.log.日期” 文件 
log4j.appender.DailyRollingFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.DailyRollingFile.File = C://Log4j/log3.log
log4j.appender.DailyRollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.DailyRollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n


#RollingFile
#上一个日志文件超过一定大小（1kb）的时候生成一个新的“log4.log.n”日志文件，并清空当前log4.log日志文件
#而且越新的文件n越小， 最大可持有MaxBackup个文件（3）， 若大于这个值，将删除最远古的文件
log4j.appender.RollingFile = org.apache.log4j.RollingFileAppender
log4j.appender.RollingFile.File = C://Log4j/log4.log
log4j.appender.RollingFile.MaxFileSize=1KB
log4j.appender.RollingFile.MaxBackupIndex=3
log4j.appender.RollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.RollingFile.layout.ConversionPattern =%d [%t] %-5p [%c] - %m%n